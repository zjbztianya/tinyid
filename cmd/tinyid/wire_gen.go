// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"context"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"github.com/go-kratos/kratos/v2/registry"
	"tinyid/internal/biz"
	"tinyid/internal/conf"
	"tinyid/internal/data"
	"tinyid/internal/server"
	"tinyid/internal/service"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(contextContext context.Context, confServer *conf.Server, confData *conf.Data, logger log.Logger, registrar registry.Registrar) (*kratos.App, error) {
	dataData, err := data.NewData(contextContext, confData, confServer)
	if err != nil {
		return nil, err
	}
	idgenRepo := data.NewIdgenRepo(dataData, logger)
	idgenUsecase := biz.NewIdgenUsecase(idgenRepo, logger)
	idgenService := service.NewIdgenService(idgenUsecase, logger)
	httpServer := server.NewHTTPServer(confServer, idgenService)
	grpcServer := server.NewGRPCServer(confServer, idgenService)
	app := newApp(contextContext, logger, httpServer, grpcServer, registrar)
	return app, nil
}
